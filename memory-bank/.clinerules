# .clinerules

## Project Intelligence & Patterns

- **Memory Bank Discipline:** Always read all memory-bank files at the start of every session/task. This is the only persistent project context.
- **UI Aliases:** Use the following path aliases for imports:
  - components: @/components
  - utils: @/lib/utils
  - ui: @/components/ui
  - lib: @/lib
  - hooks: @/hooks
- **UI Library:** shadcn/ui with "new-york" style and lucide icons.
- **Tailwind CSS:** Configured via src/app/globals.css, base color gray, CSS variables enabled.
- **React/Next.js:** Use TypeScript, React Server Components (RSC) enabled.
- **Component Structure:** Place UI components in @/components/ui, utilities in @/lib/utils.
- **Voice Chat Pattern:**
  - Use Web Audio API for voice capture.
  - Use Gemini API for streaming AI responses.
  - Maintain conversation state/history in React state.
  - Render chat bubbles for both user and AI, updating in real-time.
- **Accessibility:** Prioritize ARIA attributes and keyboard navigation in UI.
- **Development Workflow:**
  - Update memory-bank after significant changes or when context/requirements evolve.
  - Document new patterns, decisions, and user preferences here for future reference.

## Known Challenges
- Streaming voice-to-text and AI responses in real-time with low latency.
- Ensuring accessibility and visual polish with shadcn/ui and Tailwind.
- Keeping imports and file structure consistent with aliases and project conventions.

## User Preferences
- Maintain clear, concise documentation in memory-bank.
- Use .clinerules to capture all non-obvious project intelligence and workflow patterns.
- Always clarify and document next steps in activeContext.md and progress.md.
